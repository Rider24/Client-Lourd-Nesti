/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Controleurs.Creation;
import Controleurs.Destruction;
import Controleurs.Lecture;
import Controleurs.Modification;
import client.lourd.nesti.Clients;
import client.lourd.nesti.Cours;
import client.lourd.nesti.Ingredients;
import client.lourd.nesti.Recettes;
import client.lourd.nesti.Themes;
import client.lourd.nesti.Ville;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elrick
 */
public class Principale extends javax.swing.JFrame {

    int UltimeGlobalIdVille;
    int idDroit;
    int UltimeGlobalIdTheme;

    /**
     * Creates new form Principale
     */
    public Principale() {
        initComponents();
        initComboThemes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        creationRecette = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomRecette = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableIngredients = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        gererIngredients = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptRecette = new javax.swing.JTextArea();
        ComboTheme1 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        supprimeRecette = new javax.swing.JButton();
        modifieRecette = new javax.swing.JButton();
        ajoutRecette = new javax.swing.JButton();
        ComboTheme = new javax.swing.JComboBox<>();
        recettesList = new javax.swing.JPanel();
        tableRecettes1 = new javax.swing.JScrollPane();
        tableRecettes2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        apercuDescript = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableCours = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
        });

        jInternalFrame2.setClosable(true);
        jInternalFrame2.setResizable(true);
        jInternalFrame2.setTitle("Création client");
        jInternalFrame2.setVisible(false);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numéro", "Nom", "Prenom", "Date de naissance", "Adresse", "Mail", "Ville", "Code Postal", "Droits"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("Utilisateurs"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Créer un utilisateur");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Actualiser");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Modifier");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Supprimer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(230, 230, 230))
        );

        jTabbedPane1.addTab("Gestion clients", jPanel1);

        creationRecette.setVisible(false);

        jLabel1.setText("Nom de la recette :");

        nomRecette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomRecetteActionPerformed(evt);
            }
        });

        jLabel2.setText("Description :");

        tableIngredients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numéro", "Nom", "Quantité", "Unité"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableIngredients);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Ingrédients");

        jButton7.setText("Valider");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        gererIngredients.setText("Gérer les ingrédients");
        gererIngredients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gererIngredientsActionPerformed(evt);
            }
        });

        jButton9.setText("Retour");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        descriptRecette.setColumns(20);
        descriptRecette.setRows(5);
        jScrollPane3.setViewportView(descriptRecette);

        ComboTheme1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTheme1ActionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("Thème de la recette");

        javax.swing.GroupLayout creationRecetteLayout = new javax.swing.GroupLayout(creationRecette);
        creationRecette.setLayout(creationRecetteLayout);
        creationRecetteLayout.setHorizontalGroup(
            creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creationRecetteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creationRecetteLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(gererIngredients, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creationRecetteLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(creationRecetteLayout.createSequentialGroup()
                        .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomRecette, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                            .addGroup(creationRecetteLayout.createSequentialGroup()
                                .addComponent(ComboTheme1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        creationRecetteLayout.setVerticalGroup(
            creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creationRecetteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboTheme1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creationRecetteLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(creationRecetteLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gererIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(creationRecetteLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(creationRecetteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(217, Short.MAX_VALUE))
        );

        supprimeRecette.setText("Supprimer");
        supprimeRecette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimeRecetteActionPerformed(evt);
            }
        });

        modifieRecette.setText("Modifier");
        modifieRecette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifieRecetteActionPerformed(evt);
            }
        });

        ajoutRecette.setText("Ajouter recette");
        ajoutRecette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutRecetteActionPerformed(evt);
            }
        });

        ComboTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboThemeActionPerformed(evt);
            }
        });

        tableRecettes2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom de la recette"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRecettes2.setAutoscrolls(false);
        tableRecettes2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableRecettes2MouseReleased(evt);
            }
        });
        tableRecettes1.setViewportView(tableRecettes2);

        javax.swing.GroupLayout recettesListLayout = new javax.swing.GroupLayout(recettesList);
        recettesList.setLayout(recettesListLayout);
        recettesListLayout.setHorizontalGroup(
            recettesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 545, Short.MAX_VALUE)
            .addGroup(recettesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(recettesListLayout.createSequentialGroup()
                    .addComponent(tableRecettes1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        recettesListLayout.setVerticalGroup(
            recettesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
            .addGroup(recettesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(recettesListLayout.createSequentialGroup()
                    .addComponent(tableRecettes1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        apercuDescript.setColumns(20);
        apercuDescript.setRows(5);
        jScrollPane4.setViewportView(apercuDescript);

        jLayeredPane1.setLayer(supprimeRecette, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(modifieRecette, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ajoutRecette, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ComboTheme, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(recettesList, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(507, 555, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supprimeRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifieRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajoutRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboTheme, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(recettesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 203, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(ComboTheme, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(supprimeRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifieRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ajoutRecette, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 301, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(recettesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 532, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(creationRecette, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(creationRecette, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 88, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Gestion recettes", jPanel2);

        TableCours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom de la recette", "Nom du lieu", "Ville", "Code postal", "Date du cours", "Nom du cuisinier", "Prénom cuisinier", "Durée (en heures)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(TableCours);

        jButton6.setText("Charger la table");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setText("Créer un cours");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton8.setText("Modifier");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setText("Supprimer");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(344, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gestion Cours", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Ferme la fenêtre actuelle pour créer une fenêtre de création de client. 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        final CreationUtilisateur frame = new CreationUtilisateur();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 600);
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    // Fonction qui remplit le tableau avec la liste actuelle des clients coté serveur.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ArrayList<Clients> lesClients = Lecture.getLesUtilisateur();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] row = new Object[9];

        if (model.getRowCount() != 0) {
            model.setRowCount(0);
        }

        for (int i = 0; i <= lesClients.size() - 1; i++) {
            Clients unClient = lesClients.get(i);
            row[0] = unClient.getID();
            row[1] = unClient.getNom();
            row[2] = unClient.getPrenom();
            row[3] = unClient.getDdn();
            row[4] = unClient.getAdresse();
            row[5] = unClient.getMail();
            row[6] = unClient.getVille();
            row[7] = unClient.getCodePostal();
            row[8] = unClient.getDroit().getNom();

            model.addRow(row);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int compare = jTable1.getSelectedRow();
        System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 1));
        if (compare != -1) {
            int returnValue = JOptionPane.showConfirmDialog(jPanel1, "Voulez supprimer l'utilisateur " + jTable1.getValueAt(jTable1.getSelectedRow(), 1) + " ?", "Suppression", JOptionPane.OK_CANCEL_OPTION, 0);
            if (returnValue == JOptionPane.YES_OPTION) {
                Destruction.deleteUser(Integer.parseInt(jTable1.getValueAt(compare, 0).toString()));
                jButton1ActionPerformed(evt);
            }

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int compare = jTable1.getSelectedRow();
        if (compare != -1) {

            int idClientARecup = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            String droitUtilisateur = jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString();
            if ("Cuisinier".equals(droitUtilisateur)) {
                CreationUtilisateur.cuisinierPassé = Lecture.getUnCuisinier(idClientARecup);
                final CreationUtilisateur frame = new CreationUtilisateur();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setSize(600, 600);
                frame.setVisible(true);
                this.dispose();
            } else {
                CreationUtilisateur.clientPassé = Lecture.getUnUtilisateur(idClientARecup);
                final CreationUtilisateur frame = new CreationUtilisateur();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setSize(600, 600);
                frame.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void supprimeRecetteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimeRecetteActionPerformed
        int compare = tableRecettes2.getSelectedRow();
        if (compare != -1) {
            int returnValue = JOptionPane.showConfirmDialog(jPanel1, "Voulez supprimer la recette " + tableRecettes2.getValueAt(tableRecettes2.getSelectedRow(), 0) + " ?", "Suppression", JOptionPane.OK_CANCEL_OPTION, 0);
            if (returnValue == JOptionPane.YES_OPTION) {
                Destruction.deleteRecette(tableRecettes2.getValueAt(tableRecettes2.getSelectedRow(), 0).toString());
                ComboThemeActionPerformed(evt);
            }

        }
// Supprime la recette selectionnée dans la table (A CODER)
    }//GEN-LAST:event_supprimeRecetteActionPerformed

    private void modifieRecetteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifieRecetteActionPerformed

        int compare = tableRecettes2.getSelectedRow();
        if (compare != -1) {
            String recetteARecup = tableRecettes2.getValueAt(tableRecettes2.getSelectedRow(), 0).toString();
            System.out.println(recetteARecup);
            Recettes laRecette = Lecture.getUneRecette(recetteARecup);
            ArrayList<Ingredients> lesIngredients = Lecture.getLesIngredientsDeUneRecette(recetteARecup);
            nomRecette.setText(laRecette.getNom());
            descriptRecette.setText(laRecette.getDescription());
            DefaultTableModel model = (DefaultTableModel) tableIngredients.getModel();
            Object[] row = new Object[4];

            if (model.getRowCount() != 0) {
                model.setRowCount(0);
            }
            if (lesIngredients != null) {
                for (int i = 0; i <= lesIngredients.size() - 1; i++) {
                    Ingredients unIngredient = lesIngredients.get(i);
                    row[0] = unIngredient.getId();
                    row[1] = unIngredient.getNom();
                    row[2] = unIngredient.getQuantite();
                    row[3] = unIngredient.getUnite();

                    model.addRow(row);
                }
            }

            jLayeredPane1.setVisible(false);
            creationRecette.setVisible(true);
            // Ajouter le code pour modifier ici
        }

// Ouvre un autre layer pour modifier la recette selectionnée (permet la modification du nom, du contenu, des ingrédients associés, et de l'image)
    }//GEN-LAST:event_modifieRecetteActionPerformed

    private void ajoutRecetteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutRecetteActionPerformed
        jLayeredPane1.setVisible(false);
        creationRecette.setVisible(true);
// Ouvre un autre layer avec l'interface de création de recette. 
    }//GEN-LAST:event_ajoutRecetteActionPerformed

    private void nomRecetteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomRecetteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomRecetteActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jLayeredPane1.setVisible(true);
        creationRecette.setVisible(false);
        resetLesChamps();
        int nombreDeRow = tableIngredients.getRowCount();

        for (int i = nombreDeRow - 1; i >= 0; i--) {
            DefaultTableModel model = (DefaultTableModel) tableIngredients.getModel();

            model.removeRow(i);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void ComboThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboThemeActionPerformed
        if (ComboTheme.getSelectedIndex() != 0) {
            ArrayList<Recettes> lesRecettes = Lecture.getLesRecettesSelonTheme(ComboTheme.getSelectedItem().toString());
            DefaultTableModel model = (DefaultTableModel) tableRecettes2.getModel();
            if (lesRecettes != null) {
                Object[] row = new Object[1];

                if (model.getRowCount() != 0) {
                    model.setRowCount(0);
                }
                for (int i = 0; i <= lesRecettes.size() - 1; i++) {
                    Recettes uneRecette = lesRecettes.get(i);
                    row[0] = uneRecette.getNom();

                    model.addRow(row);
                }
            } else {
                if (model.getRowCount() != 0) {
                    model.setRowCount(0);
                }
            }
            GestionIngredientsRecette.themeActuel = ComboTheme.getSelectedItem();
        }
    }//GEN-LAST:event_ComboThemeActionPerformed

    private void tableRecettes2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRecettes2MouseReleased
        Recettes laRecette = Lecture.getUneRecette(tableRecettes2.getValueAt(tableRecettes2.getSelectedRow(), 0).toString());
        apercuDescript.setText(laRecette.getDescription());
    }//GEN-LAST:event_tableRecettes2MouseReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        

        if ("".equals(nomRecette.getText())) {
            JOptionPane.showMessageDialog(jPanel1, "Le nom comporte une erreur.", "Votre attention, invocateur.", 0);
        }else if(ComboTheme1.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(jPanel1, "Le thème selectionné comporte une erreur.", "Votre attention, invocateur.", 0);
        }else{
            String nomRec = nomRecette.getText();
            String desc = descriptRecette.getText();
            String nomTheme = ComboTheme1.getSelectedItem().toString();
            Recettes testRecette = Lecture.getUneRecette(nomRec);
            if (testRecette == null){
                Creation.creationRecette(nomRec, desc, nomTheme);
            }else{
                Modification.modificationRecette(testRecette.getID(), nomRec, desc, nomTheme);
            }
            
            
            int nombreDeRow = tableIngredients.getRowCount();

        for (int i = nombreDeRow - 1; i >= 0; i--) {
            DefaultTableModel model = (DefaultTableModel) tableIngredients.getModel();

            model.removeRow(i);       
        }
        jLayeredPane1.setVisible(true);
        creationRecette.setVisible(false);
        resetLesChamps();

        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void gererIngredientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gererIngredientsActionPerformed
        GestionIngredientsRecette.nomRecettePassée = nomRecette.getText();
        final GestionIngredientsRecette frame = new GestionIngredientsRecette();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        frame.setAlwaysOnTop(true);
        String nomRec = nomRecette.getText();
        String desc = descriptRecette.getText();
        String nomTheme = ComboTheme1.getSelectedItem().toString();
        if (Lecture.getUneRecette(nomRec) == null){
            Creation.creationRecette(nomRec, desc, nomTheme);
        }else{
            GestionIngredientsRecette.modification = true;
        }
        
    }//GEN-LAST:event_gererIngredientsActionPerformed

    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained
//        System.out.println("c'est le tabbedpane focus gained");
//        ArrayList<Ingredients> lesIngredients = Lecture.getLesIngredientsDeUneRecette(nomRecette.getText());
//        DefaultTableModel model = (DefaultTableModel) tableIngredients.getModel();
//        Object[] row = new Object[4];
//
//        if(model.getRowCount()!= 0){
//            model.setRowCount(0);
//        }
//            System.out.println(lesIngredients);
//            System.out.println(lesIngredients.size());
//        for (int i = 0; i <= lesIngredients.size() - 1; i++){
//            Ingredients unIngredient = lesIngredients.get(i);
//            row[0] = unIngredient.getId();
//            row[1] = unIngredient.getNom();
//            row[2] = unIngredient.getQuantite();
//            row[3] = unIngredient.getUnite();
//
//            model.addRow(row);
//        }
    }//GEN-LAST:event_jTabbedPane1FocusGained

    private void ComboTheme1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTheme1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTheme1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ArrayList<Cours> lesCours = Lecture.getLesCours();
        
        DefaultTableModel model = (DefaultTableModel) TableCours.getModel();
        Object[] row = new Object[8];

        if (model.getRowCount() != 0) {
            model.setRowCount(0);
        }
        System.out.println(lesCours.size());
        for (int i = 0; i <= lesCours.size() - 1; i++) {
            
            Cours unCours = lesCours.get(i);
            row[0] = unCours.getNomrecette();
            row[1] = unCours.getLieu();
            row[2] = unCours.getVille().getNom();
            row[3] = unCours.getVille().getCodePostal();
            row[4] = unCours.getDate();
            row[5] = unCours.getNomCuisinier();
            row[6] = unCours.getPrenomCuisinier();
            row[7] = unCours.getDurée();
            model.addRow(row);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final CreationCours frame = new CreationCours();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        frame.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String nomLieu = TableCours.getValueAt(TableCours.getSelectedRow(), 1).toString();
        System.out.println(nomLieu);
        Ville uneVille = new Ville(TableCours.getValueAt(TableCours.getSelectedRow(), 2).toString(), Integer.parseInt(TableCours.getValueAt(TableCours.getSelectedRow(), 3).toString()));
        String nomRec = TableCours.getValueAt(TableCours.getSelectedRow(), 0).toString();
        String date = TableCours.getValueAt(TableCours.getSelectedRow(), 4).toString();
        String nomCuisinier = TableCours.getValueAt(TableCours.getSelectedRow(), 5).toString();
        String prenomCuisinier = TableCours.getValueAt(TableCours.getSelectedRow(), 6).toString();
        int durée = Integer.parseInt(TableCours.getValueAt(TableCours.getSelectedRow(), 7).toString());
        ModificationCours.coursPassé = new Cours(nomLieu, uneVille, nomRec, date, nomCuisinier, prenomCuisinier, durée);
        
        
        final ModificationCours frame = new ModificationCours();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(780, 800);
        frame.setVisible(true);
        frame.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int idCuisinier = Lecture.getUnCuisinier(TableCours.getValueAt(TableCours.getSelectedRow(), 5).toString(), TableCours.getValueAt(TableCours.getSelectedRow(), 6).toString()).getID();
        String nomPlageHoraire = TableCours.getValueAt(TableCours.getSelectedRow(), 4).toString();
        int idPlageHoraire = Lecture.getUnePLage(nomPlageHoraire).getID();
        String date = nomPlageHoraire.substring(0, 4)+"-"+nomPlageHoraire.substring(5, 7)+"-"+nomPlageHoraire.substring(8,10);
        System.out.println(idCuisinier);
        System.out.println(nomPlageHoraire);
        System.out.println(date);
        
        Destruction.deleteCours(idCuisinier, idPlageHoraire, date);
        JOptionPane.showMessageDialog(jPanel1, "Suppression effectuée.", "Bravo !", 2);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void initComboThemes() {
        ArrayList<Themes> lesThemes = Lecture.getLesThemes();
        ComboTheme.addItem("Selectionnez un Theme !");
        ComboTheme1.addItem("Selectionnez un Theme !");
        for (int i = 0; i <= lesThemes.size() - 1; i++) {
            Themes unTheme = lesThemes.get(i);
            ComboTheme.addItem(unTheme.getName());
            ComboTheme1.addItem(unTheme.getName());
        }
    } // Initialise le combo des thèmes a travers une requete qui récupère tous les thèmes de la BDD

    private void resetLesChamps() {
        nomRecette.setText("");
        descriptRecette.setText("");
        ComboTheme1.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboTheme;
    private javax.swing.JComboBox<String> ComboTheme1;
    private javax.swing.JTable TableCours;
    private javax.swing.JButton ajoutRecette;
    private javax.swing.JTextArea apercuDescript;
    private javax.swing.JPanel creationRecette;
    private javax.swing.JTextArea descriptRecette;
    private javax.swing.JButton gererIngredients;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton modifieRecette;
    private javax.swing.JTextField nomRecette;
    private javax.swing.JPanel recettesList;
    private javax.swing.JButton supprimeRecette;
    private javax.swing.JTable tableIngredients;
    private javax.swing.JScrollPane tableRecettes1;
    private javax.swing.JTable tableRecettes2;
    // End of variables declaration//GEN-END:variables
}
